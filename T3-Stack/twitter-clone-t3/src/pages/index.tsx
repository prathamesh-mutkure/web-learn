import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import relativeTime from "dayjs/plugin/relativeTime";

import { type RouterOutputs, api } from "~/utils/api";
import dayjs from "dayjs";
import Image from "next/image";
import LoadingSpinner, { LoadingPage } from "~/components/app/loading-spinner";
import { useState } from "react";
import toast from "react-hot-toast";

dayjs.extend(relativeTime);

type PostWithUser = RouterOutputs["post"]["getAll"][number];

function CreatePostBox() {
  const { user } = useUser();
  const [input, setInput] = useState("");
  const ctx = api.useContext();

  const { mutate, isLoading: isPostLoading } = api.post.createPost.useMutation({
    onSuccess: () => {
      setInput("");
      void ctx.post.invalidate();
    },
    onError: (e) => {
      const errorMessage = e.data?.zodError?.fieldErrors.content;

      toast(errorMessage?.[0] ?? "Failed to send post!");
    },
  });

  if (!user) return <div></div>;

  return (
    <div className="flex flex-row gap-4 border-b p-4">
      <Image
        src={user.imageUrl}
        alt="Profile Image"
        height={56}
        width={56}
        className="h-14 w-14 rounded-full"
      />

      <input
        type="text"
        className="grow bg-transparent outline-none"
        placeholder="Type some emojis"
        value={input}
        onChange={(e) => setInput(e.target.value)}
        disabled={isPostLoading}
        onKeyDown={(e) => {
          if (e.key !== "Enter") return;

          e.preventDefault();

          if (input !== "") {
            mutate({ content: input });
          }
        }}
      />

      {input !== "" && !isPostLoading && (
        <button
          onClick={() => mutate({ content: input })}
          disabled={isPostLoading}
        >
          POST
        </button>
      )}

      {isPostLoading && (
        <div className="flex items-center">
          <LoadingSpinner size={30} />
        </div>
      )}
    </div>
  );
}

function Feed() {
  const { data, isLoading } = api.post.getAll.useQuery();

  if (isLoading) return <LoadingPage />;

  return (
    <div>
      {data?.map(
        ({ post, user: { imageUrl, username, firstName, lastName } }) => {
          return (
            <div key={post.id} className="flex flex-row gap-4 p-6">
              <Image
                src={imageUrl}
                alt="Profile Image"
                height={56}
                width={56}
                className="h-14 w-14 rounded-full"
              />

              <div className="flex flex-col gap-2">
                <div>
                  <span>{username ?? `${firstName} ${lastName}`}</span>
                  <span> Â· </span>
                  <span className="font-thin">
                    {" "}
                    {dayjs(post.createdAt).fromNow()}{" "}
                  </span>
                </div>

                <div>{post.content}</div>
              </div>
            </div>
          );
        },
      )}
    </div>
  );
}

export default function Home() {
  const { isSignedIn, isLoaded: isUserLoaded } = useUser();

  // Calling this early so that it can use Cache later
  api.post.getAll.useQuery();

  if (!isUserLoaded) return <div></div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex min-h-screen flex-col items-center bg-slate-900">
        <div>{isSignedIn ? <SignOutButton /> : <SignInButton />}</div>

        <div className="w-full border border-white md:max-w-screen-lg">
          {isSignedIn && <CreatePostBox />}

          <Feed />
        </div>
      </main>
    </>
  );
}
